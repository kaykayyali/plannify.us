<div class="container-fluid">
	<div class="row">
		<%= form_for :profile , :method => :PUT, :as => :update_data do |f|  %>
		<div class="form-group col-lg-7">
		  <%= f.label :company_name  %>	
		  <%= f.text_field :name, :class => "form-control" %>
		</div>
    <div class="form-group col-lg-5">
      <%= f.label :message  %>
      <%= f.text_field :message, :class => "form-control" %>
    </div>
		<div class="form-group col-lg-4">
		  <%= f.label :owner  %>
		  <%= f.text_field :owner, :class => "form-control" %>
		</div>
		<div class="form-group col-lg-4">
		  <%= f.label :email  %>
		  <%= f.email_field :email, :class => "form-control" %>
		</div>
    <div class="form-group col-lg-4">
      <%= f.label :phone  %>
      <%= f.text_field :phone, :class => "form-control" %>
    </div>
	</div>
	<div class="row">	
    <div class="form-group col-lg-6">
      <%= f.label :webpage  %>
      <%= f.text_field :weburl, :class => "form-control" %>
    </div>
    <div class="form-group col-lg-6">
      <%= f.label :logo_Url  %>
      <%= f.text_field :imageurl, :class => "form-control" %>
    </div>
     <div class="form-group col-lg-6">
      <%= f.label :city  %>
      <%= f.text_field :city, :class => "form-control", :id => "locality", :disabled => "true" %>
    </div>
    <div class="form-group col-lg-6">
      <%= f.label :state %>
      <%= f.text_field :state, :class => "form-control", :id => "administrative_area_level_1", :disabled => "true" %>
    </div>
		<div class="form-group col-lg-9">
		  <%= f.label :address  %>
		  <%= f.text_field :address, :class => "form-control", :id => "autocomplete" %>
		</div>
    <div class="form-group col-lg-3">
      <%= f.label :zipcode %>
      <%= f.text_field :zipcode, :class => "form-control", :id => "postal_code", :disabled => "true" %>
    </div>
		<% if current_user.role == "vendor"   %>
			<div class="form-group">
			<%= f.select :service_type, options_from_collection_for_select(@services, "id", "name") %>
			</div>
		<% end %>
    <%= f.submit "Update Profile", :class => "btn btn-primary btn-wide col-lg-12", :remote => "true" %>
	</div>
 
	<% end %>
</div>
	
<style>
     
  .pac-container {
    background-color: #FFF;
    z-index: 20;
    position: fixed;
    display: inline-block;
    float: left;
    border-radius: 10px;
	}
	.modal{
	    z-index: 20;   
	}
	.modal-backdrop{
	    z-index: 10;        
	}â€‹

    </style>
    <link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500">
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=places"></script>
    <script>
// This example displays an address form, using the autocomplete feature
// of the Google Places API to help users fill in the information.

var placeSearch, autocomplete;
var componentForm = {
  locality: 'long_name',
  administrative_area_level_1: 'short_name',
  postal_code: 'short_name'
};

function initialize() {
  // Create the autocomplete object, restricting the search
  // to geographical location types.
  autocomplete = new google.maps.places.Autocomplete(
      /** @type {HTMLInputElement} */(document.getElementById('autocomplete')),
      { types: ['geocode'] });
  // When the user selects an address from the dropdown,
  // populate the address fields in the form.
  google.maps.event.addListener(autocomplete, 'place_changed', function() {
    fillInAddress();
  });
}

// [START region_fillform]
function fillInAddress() {
  // Get the place details from the autocomplete object.
  var place = autocomplete.getPlace();

  for (var component in componentForm) {
    document.getElementById(component).value = '';
    document.getElementById(component).disabled = false;
  }

  // Get each component of the address from the place details
  // and fill the corresponding field on the form.
  for (var i = 0; i < place.address_components.length; i++) {
    var addressType = place.address_components[i].types[0];
    if (componentForm[addressType]) {
      var val = place.address_components[i][componentForm[addressType]];
      document.getElementById(addressType).value = val;
    }
  }
}
// [END region_fillform]

// [START region_geolocation]
// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var geolocation = new google.maps.LatLng(
          position.coords.latitude, position.coords.longitude);
      var circle = new google.maps.Circle({
        center: geolocation,
        radius: position.coords.accuracy
      });
      autocomplete.setBounds(circle.getBounds());
    });
  }
}
// [END region_geolocation]

    </script>


  <body onload="initialize()">
   
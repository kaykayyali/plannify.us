<script>
 window.fbAsyncInit = function() {
    FB.init({
      appId      : '1033216633389655',
      xfbml      : true,
      version    : 'v2.4'
    });
  };

  (function(d, s, id){
     var js, fjs = d.getElementsByTagName(s)[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement(s); js.id = id;
     js.src = "//connect.facebook.net/en_US/sdk.js";
     fjs.parentNode.insertBefore(js, fjs);
   }(document, 'script', 'facebook-jssdk'));


  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '1033216633389655',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.2' // use version 2.2
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
      document.getElementById('status').innerHTML =
        'Thanks for logging in, ' + response.name + '!';
    });
  }
</script>
<div
  class="fb-like"
  data-share="true"
  data-width="450"
  data-show-faces="true">
</div>
<div class="container-fluid wow fadeInLeft animated">
	<div  class="col-lg-12">
		<div class="row">
			<div class="col-xl-10 col-lg-10 col-md-10 col-sm-10" >
				<h1>Upcoming</h1>
			</div>
			<div class="col-xl-2 col-lg-2 col-md-2 col-sm-2">
			<br>
				<a href="<%= organizers_addevent_path  %>" class= "btn btn-primary btn-md pull-right"style="color:white;">Add New Event</a>
			</div>
		</div>
	<hr>
	<br>		
						<% if @events.present? %>
						<% columncounter = 0 %>
						<% @events.each do |event| %>
						<% if columncounter  == 0 %>
							<div class="row">
							
						
						<% end %>
						<% columncounter = columncounter + 1 %>
						
						<div class="col-lg-3" style="position:relative;">
							
							<style>
								.btn-edit {
									position: absolute;
									top: 15px;
									right: 28px;
								}
							</style>
							
								<div class="panel panel-default panel-border-grey ex1 text-center justify-block box-shadow  " id="<%= event.id  %>">
								<%= link_to 'X', "/organizer/deleteevent/#{event.id}", data: { :confirm => 'Are you sure?', method: :delete}, remote: true , :class => "btn btn-sm btn-danger btn-edit", :style =>"z-index: 30;"   %>
								<a href="/organizers/showevent/<%= event.id %>" style="color:black; z-index:30;">
									<div class="panel-body">
										<h4><%= event.name  %> <br> <small><%= event.venue  %></small></h4>
										<hr>
										<%= pretty_date(event.start_date)  %> <br>
										<%= event.address %><br>
										<%= event.city  %>, <%= event.state  %> <%= event.zipcode  %> <br>
									</div>
								</div>
							</a>
						</div>
						
						
							<% if columncounter == 4 %>
								
								</div>
							<%  columncounter = 0 %>
							<% end %>
						<% end %>
						<% end %>
						
					</div>
					
			
			</div>

		</div>
	</div>
	
</div>



<div class="modal fade" id="vendorsModal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Vendors In Your Area</h4>
      </div>
      <div class="modal-body">
      <ul class="list-unstyled">
					<% @vendors.each do |vendor| %>
						<li>
							<h4 style="display:inline;"> 
								<a href="<%= profile_path(vendor.id)  %>" ><b><%= vendor.name  %></b>
								</a>
								<% if vendor.name.present? %>
									<small><%= vendor.profile.name  %></small>
								<% end %>
							</h4>
						</li>
						<hr>
					<% end %>
				</ul>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<script>
	$('#navbarUL').append("<li class='navbar-text pull-right'><a href='#'type='button' data-toggle='modal' data-target='#vendorsModal'>View Vendors</a></li>");
	$(".btn-edit").hover(
		function(){$(this).parent().css("background-color","rgba(243,57,57,0.5)");
	},
		function(){$(this).parent().css("background-color", "")}
	);
	$(".ex1").hover(
		function(){$(this).css("background-color","rgba(144,216,243,0.5)");
	},
		function(){$(this).css("background-color", "")}
	);
</script>
